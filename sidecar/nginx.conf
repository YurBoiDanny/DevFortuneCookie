worker_processes 1;

events { worker_connections 1024; }

http {
  # --- Verbose access + error logs ---
  error_log /var/log/nginx/error.log info;

  log_format sidecar
    'time=$time_local '
    'req_id=$request_id '
    'client=$remote_addr '
    'method=$request_method host=$host uri=$request_uri '
    'status=$status bytes=$body_bytes_sent '
    'rt=$request_time '
    'upstream=$upstream_addr us_status=$upstream_status '
    'us_rt=$upstream_response_time us_ct=$upstream_connect_time '
    'cache=$upstream_cache_status '
    'ref="$http_referer" ua="$http_user_agent"';

  access_log /var/log/nginx/access.log sidecar;

  # --- Cache configuration ---
  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=apicache:10m
                   max_size=100m inactive=30s use_temp_path=off;

  # --- Rate limiting: 5 r/s per client (burst 10) ---
  limit_req_zone $binary_remote_addr zone=ratelimit:10m rate=5r/s;

  upstream app_upstream {
    server app:8080;   # Compose service name for your .NET app
    keepalive 32;
  }

  server {
    listen 8081;

    # Expose useful headers to clients (UI reads X-Cache; X-Request-Id helps correlation)
    add_header X-Cache $upstream_cache_status always;
    add_header X-Request-Id $request_id always;

    # Shared proxy headers to correlate calls end-to-end
    proxy_set_header X-Request-Id $request_id;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header Connection "";
    proxy_http_version 1.1;

    # --- Cached + rate-limited endpoint ---
    location /api/fortune {
      limit_req zone=ratelimit burst=10 nodelay;

      proxy_cache apicache;
      proxy_cache_valid 200 30s;
      proxy_cache_revalidate on;

      # key includes path + query string (works for /fortune/{n} or ?n=)
      proxy_cache_key "$scheme$proxy_host$uri$is_args$args";

      proxy_pass http://app_upstream;
    }

    # --- Flaky endpoint with retries ---
    location /api/flaky {
      proxy_connect_timeout 1s;
      proxy_read_timeout 2s;

      proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
      proxy_next_upstream_tries 3;

      proxy_pass http://app_upstream;
    }

    # --- Everything else proxied through ---
    location / {
      proxy_pass http://app_upstream;
    }
  }
}
